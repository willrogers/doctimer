{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.string.pad-start.js","webpack:///./node_modules/core-js/modules/_string-pad.js","webpack:///./src/model.ts","webpack:///./src/components/buttons.jsx","webpack:///./src/components/status.tsx","webpack:///./src/components/controls.jsx","webpack:///./src/components/stats.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/buttons.module.css","webpack:///./src/components/status.module.css","webpack:///./src/components/stats.module.css","webpack:///./node_modules/core-js/modules/_string-repeat.js"],"names":["$export","$pad","userAgent","WEBKIT_BUG","test","P","F","padStart","maxLength","this","arguments","length","undefined","toLength","repeat","defined","module","exports","that","fillString","left","S","String","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","Math","ceil","slice","CATEGORIES","zeroPad","num","places","timeString","millis","secs","floor","round","Segment","category","comment","startMillis","Date","now","endDuration","setComment","stop","console","log","startTime","endTime","currentDuration","Day","date","segments","addSegment","segment","push","Timer","props","running","child","text","time","className","classes","subhead","onClick","callback","name","type","button","timer","TimerButton","bgcolor","selected","disabled","altname","style","backgroundColor","SwitchButton","toControls","switch","setControlsView","Buttons","buttons","startPressed","started","currentSegment","buttonsSelected","map","deets","key","itemPressed","Status","id","status","toLocaleDateString","weekday","day","month","year","hour","minute","second","events","ControlsView","setCurrentSegment","setStarted","useState","setTime","useEffect","window","setInterval","clearInterval","categories","newSegment","CategorySummary","minLength","totalLength","forEach","StatsView","categorySegments","catParts","Object","keys","oneSegment","statsView","width","display","alignItems","DoctimerPage","controlsView","toInteger","count","str","res","n","Infinity","RangeError"],"mappings":"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","file":"component---src-pages-index-tsx-fc79a41958a99e77dd9e.js","sourcesContent":["'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","export const PHONE_APPT = \"Phone Appointment\"\nexport const IN_PERSON_APPT = \"Face-to-face Appointment\"\nexport const NOTES = \"Notes\"\nexport const VISIT = \"Home Visit\"\nexport const MEETING = \"Meeting\"\nexport const CHECKS = \"Checks\"\nexport const IN_BETWEEN = \"In between\"\nexport const CATEGORIES = [\n  PHONE_APPT,\n  IN_PERSON_APPT,\n  NOTES,\n  VISIT,\n  MEETING,\n  CHECKS,\n]\n\nfunction zeroPad(num: number, places: number): string {\n  return String(num).padStart(places, \"0\")\n}\n\nexport function timeString(millis: number): string {\n  const secs = millis / 1000\n  const minutes = zeroPad(Math.floor(secs / 60), 2)\n  const seconds = zeroPad(Math.round(secs % 60), 2)\n  return `${minutes}:${seconds}`\n}\n\nexport function fullTimeString(date: Date): string {\n  return date.toLocaleTimeString()\n}\n\nexport function fullDateString(date: Date): string {\n  const options = {\n    weekday: \"long\",\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n  }\n  return date.toLocaleDateString(undefined, options)\n}\n\nexport class Segment {\n  public category: string\n  public comment: string\n  public startMillis: number\n  public endDuration: number\n  constructor(category: string) {\n    this.category = category\n    this.comment = null\n    this.startMillis = Date.now()\n    this.endDuration = null\n  }\n  setComment(comment: string): void {\n    this.comment = comment\n  }\n  stop(): void {\n    this.endDuration = Date.now() - this.startMillis\n    console.log(`stopped segment ${this.endDuration}`)\n  }\n  startTime(): Date {\n    return new Date(this.startMillis)\n  }\n  endTime(): Date {\n    if (this.endDuration) {\n      return new Date(this.startMillis + this.endDuration)\n    } else {\n      return new Date()\n    }\n  }\n  currentDuration(): number {\n    if (this.endDuration !== null) {\n      return this.endDuration\n    } else {\n      return Date.now() - this.startMillis\n    }\n  }\n}\n\nexport class Day {\n  public date: Date\n  public segments: Segment[]\n  constructor() {\n    this.date = new Date()\n    this.segments = []\n  }\n\n  addSegment(segment: Segment): void {\n    this.segments.push(segment)\n    console.log(`${this.segments.length} segments`)\n  }\n}\n","import React from \"react\"\nimport { timeString } from \"../model\"\nimport classes from \"./buttons.module.css\"\n\nexport const Timer = props => {\n  function clicked() {\n    if (props.callback) {\n      props.callback(props.name)\n    }\n  }\n  const { running, segment } = props\n  let child = <div>Start Clinic</div>\n  let text = \"\"\n  if (running) {\n    if (segment !== null) {\n      const time = timeString(segment.currentDuration())\n      text = `${segment.category}: ${time}`\n    } else {\n      text = \"No appointment in progress\"\n    }\n    child = (\n      <>\n        <div>{text}</div>\n        <div className={classes.subhead}>Press to stop clinic</div>\n      </>\n    )\n  }\n  return (\n    <button\n      onClick={clicked}\n      type=\"button\"\n      className={`${classes.button} ${classes.timer}`}\n    >\n      {child}\n    </button>\n  )\n}\n\nexport const StartButton = props => {\n  function clicked() {\n    if (props.callback) {\n      props.callback(props.name)\n    }\n  }\n  const bgcolor = props.selected ? \"red\" : \"green\"\n  const text = props.selected ? \"Stop\" : \"Start\"\n  return (\n    <button\n      className={classes.button}\n      style={{ backgroundColor: bgcolor }}\n      type=\"button\"\n      onClick={clicked}\n    >\n      {text}\n    </button>\n  )\n}\n\nexport const TimerButton = props => {\n  function clicked() {\n    if (props.callback) {\n      props.callback(props.name)\n    }\n  }\n  const bgcolor = props.selected && !props.disabled ? \"red\" : \"gray\"\n  const text =\n    props.altname !== undefined && props.selected ? props.altname : props.name\n  return (\n    <button\n      className={classes.button}\n      disabled={props.disabled}\n      style={{ backgroundColor: bgcolor }}\n      type=\"button\"\n      onClick={clicked}\n    >\n      {`${props.selected ? \"Stop\" : \"Start\"} ${text}`}\n    </button>\n  )\n}\n\nexport const SwitchButton = props => {\n  let text = \"\"\n  if (props.toControls) {\n    text = \"Back to controls\"\n  } else {\n    text = \"See stats\"\n  }\n  function doSwitch() {\n    if (props.toControls) {\n      props.setControlsView(true)\n    } else {\n      props.setControlsView(false)\n    }\n  }\n  return (\n    <button\n      className={`${classes.button} ${classes.switch}`}\n      onClick={doSwitch}\n    >\n      {text}\n    </button>\n  )\n}\n\nexport const Buttons = props => {\n  return (\n    <div className={classes.buttons}>\n      <Timer\n        callback={props.startPressed}\n        selected={props.started}\n        running={props.started}\n        segment={props.currentSegment}\n      />\n      {props.buttonsSelected.map(deets => (\n        <TimerButton\n          key={deets[0]}\n          name={deets[0]}\n          selected={deets[1]}\n          callback={props.itemPressed}\n          disabled={!props.started}\n        ></TimerButton>\n      ))}\n      <SwitchButton\n        toControls={false}\n        setControlsView={props.setControlsView}\n      />\n    </div>\n  )\n}\n","import React from \"react\"\nimport { fullDateString } from \"../model\"\nimport classes from \"./status.module.css\"\n\ninterface StatusProps {\n  time: Date\n  events: number\n}\n\nexport const Status = (props: StatusProps): JSX.Element => {\n  return (\n    <div id=\"status\" className={classes.status}>\n      <div className={classes.date}>{fullDateString(props.time)}</div>\n      <div className={classes.events}>{props.events} events so far.</div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport \"./controls.css\"\nimport { Buttons } from \"../components/buttons\"\nimport { Status } from \"./status\"\nimport { Segment } from \"../model\"\nimport { useEffect } from \"react\"\n\nexport const ControlsView = props => {\n  const { currentSegment, setCurrentSegment, started, setStarted } = props\n  const [time, setTime] = useState(new Date())\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      setTime(new Date())\n    }, 1000)\n    return () => {\n      clearInterval(timer)\n    }\n  })\n  function startPressed() {\n    setStarted(!started)\n    if (started && currentSegment) {\n      currentSegment.stop()\n      props.day.addSegment(currentSegment)\n    }\n  }\n  function itemPressed(category) {\n    if (currentSegment === null) {\n      // Start segment\n      const newSegment = new Segment(category)\n      setCurrentSegment(newSegment)\n    } else if (currentSegment.category === category) {\n      // Stop segment\n      currentSegment.stop()\n      props.day.addSegment(currentSegment)\n      setCurrentSegment(null)\n    } else {\n      currentSegment.stop()\n      props.day.addSegment(currentSegment)\n      const newSegment = new Segment(category)\n      setCurrentSegment(newSegment)\n    }\n  }\n  const buttonsSelected = props.categories.map(category => [\n    category,\n    currentSegment && category === currentSegment.category,\n  ])\n  return (\n    <div id=\"buttonScreen\">\n      <Status time={time} events={props.day.segments.length} />\n      <Buttons\n        buttonsSelected={buttonsSelected}\n        itemPressed={itemPressed}\n        started={started}\n        startPressed={startPressed}\n        currentSegment={currentSegment}\n        setControlsView={props.setControlsView}\n      />\n    </div>\n  )\n}\n","import React from \"react\"\nimport classes from \"./stats.module.css\"\nimport { SwitchButton } from \"./buttons\"\nimport { fullTimeString, timeString, Segment, CATEGORIES } from \"../model\"\n\nexport const SegmentSummary = (props: { segment: Segment }): JSX.Element => {\n  const { segment } = props\n  console.log(segment.endTime())\n  return (\n    <div>\n      {segment.category} start {fullTimeString(segment.startTime())} end{\" \"}\n      {fullTimeString(segment.endTime())} duration{\" \"}\n      {timeString(segment.currentDuration())}\n    </div>\n  )\n}\n\nexport const CategorySummary = (props: {\n  category: string\n  segments: Segment[]\n}): JSX.Element => {\n  const { category, segments } = props\n  let maxLength = undefined\n  let minLength = undefined\n  let totalLength = 0\n  segments.forEach((segment: Segment): void => {\n    if (maxLength !== undefined) {\n      if (segment.endDuration > maxLength) {\n        maxLength = segment.endDuration\n      }\n    } else {\n      maxLength = segment.endDuration\n    }\n    if (minLength !== undefined) {\n      if (segment.endDuration < minLength) {\n        minLength = segment.endDuration\n      }\n    } else {\n      minLength = segment.endDuration\n    }\n    totalLength += segment.endDuration\n  })\n  return (\n    <div className={classes.category}>\n      <h3>\n        {category}: {segments.length} segment{segments.length === 1 ? \"\" : \"s\"}.\n      </h3>\n      <p>Shortest {timeString(minLength)}</p>\n      <p>Longest {timeString(maxLength)}</p>\n      <p>Average length {timeString(totalLength / segments.length)}</p>\n    </div>\n  )\n}\n\nexport const StatsView = props => {\n  const categorySegments = {}\n  props.day.segments.forEach((segment: Segment) => {\n    if (!categorySegments[segment.category]) {\n      categorySegments[segment.category] = [segment]\n    } else {\n      categorySegments[segment.category].push(segment)\n    }\n  })\n  const catParts = Object.keys(categorySegments).map((category: string) => (\n    <CategorySummary\n      key={category}\n      category={category}\n      segments={categorySegments[category]}\n    />\n  ))\n\n  const oneSegment = props.day.segments.length === 1\n\n  return (\n    <div className={classes.statsView}>\n      <h3>Stats for {props.day.date.toLocaleDateString()}:</h3>\n      <p>\n        There {oneSegment ? \"has\" : \"have\"} been {props.day.segments.length}{\" \"}\n        completed segment{oneSegment ? \"\" : \"s\"}.\n      </p>\n      {props.currentSegment && (\n        <p>\n          <strong>{props.currentSegment.category}</strong> currently in\n          progress.\n        </p>\n      )}\n      {catParts}\n      <div style={{ width: \"100%\", display: \"flex\", alignItems: \"center\" }}>\n        <SwitchButton\n          toControls={true}\n          setControlsView={props.setControlsView}\n        ></SwitchButton>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\n\nimport { ControlsView } from \"../components/controls\"\nimport { StatsView } from \"../components/stats\"\nimport { Day, CATEGORIES, Segment } from \"../model\"\n\nconst DoctimerPage = (): JSX.Element => {\n  const [day, setDay] = useState<Day>(new Day())\n  const [controlsView, setControlsView] = useState<boolean>(true)\n  const [currentSegment, setCurrentSegment] = useState<Segment>(null)\n  const [started, setStarted] = useState<boolean>(null)\n\n  if (controlsView) {\n    return (\n      <ControlsView\n        setControlsView={setControlsView}\n        day={day}\n        categories={CATEGORIES}\n        currentSegment={currentSegment}\n        setCurrentSegment={setCurrentSegment}\n        started={started}\n        setStarted={setStarted}\n      />\n    )\n  } else {\n    return (\n      <StatsView\n        currentSegment={currentSegment}\n        day={day}\n        setControlsView={setControlsView}\n      />\n    )\n  }\n}\n\nexport default DoctimerPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"buttons-module--buttons--3J-va\",\"button\":\"buttons-module--button--22YE3\",\"timer\":\"buttons-module--timer--3CQwQ\",\"subhead\":\"buttons-module--subhead--15lBa\",\"switch\":\"buttons-module--switch--1AGYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"status-module--status--33GdV\",\"date\":\"status-module--date--2GlmR\",\"events\":\"status-module--events--1WGr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsView\":\"stats-module--statsView--3Ct4N\",\"statsContainer\":\"stats-module--statsContainer--3sYxV\",\"statsColumn\":\"stats-module--statsColumn--1DJjV\",\"category\":\"stats-module--category--2Oin2\"};","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n"],"sourceRoot":""}